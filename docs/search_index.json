[["index.html", "Notas de métodos estadísticos Introducción 1. Introducción a R y RStudio 2. Introducción a Tidyverse", " Notas de métodos estadísticos Carlos de Oro Aguado 2025-06-27 Introducción La asignatura de Métodos Estadísticos tiene como propósito desarrollar en el estudiante competencias analíticas rigurosas para la comprensión, modelación e interpretación de datos cuantitativos, con base en herramientas estadísticas fundamentales orientadas a la ciencia de datos. A lo largo del curso se emplean enfoques descriptivos, inferenciales y multivariados, complementados con técnicas robustas no paramétricas, con énfasis en aplicaciones reales y toma de decisiones basadas en evidencia. Durante el primer corte, el enfoque se centra en el análisis exploratorio de datos y diagnóstico inferencial, abordando la caracterización de variables mediante medidas de tendencia central, dispersión y forma. Se introducen técnicas de análisis de correlación (coeficientes de Pearson, Spearman y Kendall) como base para evaluar relaciones lineales o no lineales entre variables. Además, se presenta la Regresión Lineal Simple (RLS), incluyendo la identificación de términos básicos, formulación del modelo, interpretación de coeficientes y evaluación de la bondad de ajuste. Se discuten los supuestos del modelo (normalidad, homocedasticidad, independencia y linealidad), y se introducen herramientas para el análisis gráfico de residuos. En el segundo corte, se profundiza en la modelación con RLS, enfocándose en sus aplicaciones prácticas, validación estadística e inferencia sobre los parámetros. Se abordan temas como la construcción de intervalos de confianza, contrastes de hipótesis para los coeficientes de regresión, análisis de significancia del modelo y predicciones puntuales e intervalares. Se refuerzan conceptos clave de validación, tales como el análisis de residuos, influencia y multicolinealidad. Asimismo, se inicia la transición hacia modelos más complejos, preparando el terreno para el análisis multivariado. El tercer corte está dedicado a la Regresión Lineal Múltiple (RLM), donde se modela la respuesta de una variable dependiente a partir de múltiples variables explicativas. Se analizan sus fundamentos matemáticos, estimación por mínimos cuadrados, interpretación de coeficientes parciales y evaluación de supuestos del modelo. Se incluye inferencia sobre parámetros, prueba global de significancia, análisis de varianza (ANOVA), selección de variables y medidas de ajuste como \\(R^2\\) ajustado y el criterio de información de Akaike (AIC). Finalmente, se ofrece una introducción a otros modelos de regresión (como regresión polinómica o con transformaciones) y a los principios básicos del análisis multivariado, orientado a estudiar estructuras de dependencia entre múltiples variables simultáneamente. En conjunto, este curso constituye un pilar fundamental para el desarrollo de habilidades analíticas aplicadas a la ciencia de datos, y prepara al estudiante para abordar con solvencia asignaturas posteriores como inferencia estadística, teoría de la probabilidad, aprendizaje estadístico y análisis multivariante avanzado. 1. Introducción a R y RStudio El primer paso para comenzar a trabajar con R, un lenguaje de programación especializado en estadística, ciencia de datos y visualización, es instalarlo en tu computadora. R es compatible con los principales sistemas operativos, incluyendo Windows, macOS y Linux. ¿Qué es R? R es un lenguaje de programación y un entorno de software libre dedicado al análisis estadístico y la generación de gráficos. Su potencia radica en una gran variedad de paquetes estadísticos, su comunidad activa y su capacidad de integración con otras herramientas como Python, SQL, y plataformas de visualización como Power BI o Tableau. ¿Qué es RStudio? RStudio es un entorno de desarrollo integrado (IDE) que proporciona una interfaz gráfica intuitiva y muy funcional para trabajar con R. Entre sus características destacan: Editor de scripts con resaltado de sintaxis. Consola interactiva para ejecutar comandos. Panel de visualización de datos y objetos en memoria. Gráficos integrados. Soporte para proyectos y versiones de R. Integración con Git, Markdown, Quarto y Shiny. Aunque se puede usar R sin RStudio, la mayoría de los usuarios prefieren trabajar dentro de este entorno por su productividad, organización y facilidad de uso. Enlaces de descarga A continuación, se indican los enlaces oficiales para descargar (paso a paso) tanto R como RStudio: 1. Descargar R Página oficial del proyecto R: En esta página puedes seleccionar tu sistema operativo: Para Windows: https://cran.r-project.org/bin/windows/base/ Para macOS: https://cran.r-project.org/bin/macosx/ Para Linux: https://cran.r-project.org/bin/linux/ 2. Descargar RStudio Página oficial de RStudio (ahora llamado Posit): Selecciona la versión gratuita de RStudio Desktop y descarga el instalador correspondiente a tu sistema operativo. Recomendaciones Instala R primero, y luego RStudio. Una vez instalados, abre RStudio, que se encargará de ejecutar R en segundo plano. Puedes instalar paquetes adicionales desde RStudio usando el comando: install.packages(&quot;nombre_del_paquete&quot;) 2. Introducción a Tidyverse El Tidyverse es un conjunto de paquetes integrados para el lenguaje de programación R, diseñados con el objetivo de facilitar el análisis de datos de manera estructurada, legible y eficiente. Su filosofía se basa en el concepto de “datos ordenados” (tidy data), donde cada variable es una columna, cada observación una fila, y cada tipo de unidad observacional forma una tabla. Estos paquetes comparten principios de diseño comunes y una gramática coherente, lo que permite a los usuarios aprender un conjunto de reglas aplicables en todo el ecosistema, aumentando así la productividad y la claridad del código. Representación visual del ecosistema Tidyverse Principales paquetes del Tidyverse A continuación se describen los paquetes más representativos que conforman el núcleo del Tidyverse:  ggplot2 Permite la creación de visualizaciones estadísticas sofisticadas mediante la Gramática de los Gráficos (Grammar of Graphics). Con ggplot2 puedes combinar capas de datos, geometrías, escalas y temas para construir gráficos informativos y estéticamente agradables. Es ampliamente utilizado en análisis exploratorio y comunicación de resultados.  dplyr Facilita la manipulación de datos mediante verbos intuitivos como: filter() para filtrar filas según condiciones lógicas, select() para elegir columnas, mutate() para crear o transformar variables, summarise() para resumir valores, group_by() para operaciones agrupadas. Trabaja perfectamente con tibble y se puede aplicar a bases de datos con dbplyr.  tidyr Su propósito es convertir datos desorganizados en un formato “ordenado”. Algunas de sus funciones clave incluyen: pivot_longer() y pivot_wider() para cambiar el formato de los datos. separate() para dividir una columna en varias. unite() para fusionar columnas en una sola. Estas funciones son fundamentales para preparar datos antes del análisis.  readr Ofrece funciones rápidas y confiables para importar archivos .csv, .tsv, .fwf, entre otros. Es más eficiente que read.table() y permite: Importar con read_csv(), read_delim() o read_fwf(). Detectar problemas de formato con problems(). Controlar tipos de datos con argumentos explícitos.  stringr Simplifica el trabajo con cadenas de texto (caracteres). Proporciona una sintaxis coherente para tareas comunes como: Búsqueda de patrones (str_detect, str_subset), Manipulación (str_replace, str_sub, str_trim), Conteo (str_count), Extracción (str_extract, str_match). Ideal para limpiar y procesar textos en análisis de encuestas, redes sociales o nombres de variables.  forcats Dedicado al tratamiento de factores en R, un tipo especial de variable categórica. forcats ofrece funciones para: Reordenar niveles según frecuencia (fct_infreq()), Fusionar niveles (fct_collapse()), Recodificar (fct_recode()), Ordenar según otras variables (fct_reorder()). Útil en análisis estadísticos donde el tratamiento adecuado de las categorías es clave.  lubridate Permite el manejo sencillo de fechas y horas. Resuelve uno de los aspectos más complejos en análisis temporal con funciones como: ymd(), dmy(), mdy() para convertir cadenas en fechas, hour(), minute(), second() para extraer componentes, interval(), duration() y period() para trabajar con intervalos de tiempo.  haven Permite importar y exportar archivos desde software estadístico como: SPSS (.sav, .zsav), Stata (.dta), SAS (.sas7bdat, .xpt). Esencial para interoperabilidad con datos institucionales y académicos que provienen de otras plataformas.  readxl Importa archivos de Excel (.xls, .xlsx) sin necesidad de tener Excel instalado. Las funciones clave incluyen: read_excel() para leer hojas completas, excel_sheets() para listar las hojas de un archivo. Ideal para usuarios que reciben datos administrativos, contables o estadísticos en formato Excel.  purrr Introduce herramientas de programación funcional en R, permitiendo aplicar funciones a listas o vectores con más control que lapply() o sapply(). Permite: Iterar con map(), map_df(), map_dbl(), etc. Trabajar con errores mediante safely(), possibly(). Manipular listas de manera estructurada. Ideal para automatizar tareas repetitivas.  tibble Es una versión mejorada de los data frames tradicionales. Entre sus ventajas: Muestra solo las primeras 10 filas y columnas visibles. No modifica automáticamente los nombres de columnas. Trabaja mejor con los flujos de trabajo del Tidyverse. Instalación del Tidyverse en R Para instalar todos los paquetes del núcleo del Tidyverse, simplemente se ejecuta en la consola de R: install.packages(&quot;tidyverse&quot;) "],["prerequisites.html", "Capítulo 1 Prerequisites", " Capítulo 1 Prerequisites This is a sample book written in Markdown. You can use anything that Pandoc’s Markdown supports, e.g., a math equation \\(a^2 + b^2 = c^2\\). The bookdown package can be installed from CRAN or Github: install.packages(&quot;bookdown&quot;) # or the development version # devtools::install_github(&quot;rstudio/bookdown&quot;) Remember each Rmd file contains one and only one chapter, and a chapter is defined by the first-level heading #. To compile this example to PDF, you need XeLaTeX. You are recommended to install TinyTeX (which includes XeLaTeX): https://yihui.org/tinytex/. "],["intro.html", "Capítulo 2 Introduction", " Capítulo 2 Introduction You can label chapter and section titles using {#label} after them, e.g., we can reference Chapter 2. If you do not manually label them, there will be automatic labels anyway, e.g., Chapter 4. Figures and tables with captions will be placed in figure and table environments, respectively. par(mar = c(4, 4, .1, .1)) plot(pressure, type = &#39;b&#39;, pch = 19) Figure 2.1: Here is a nice figure! Reference a figure by its code chunk label with the fig: prefix, e.g., see Figure 2.1. Similarly, you can reference tables generated from knitr::kable(), e.g., see Table 2.1. knitr::kable( head(iris, 20), caption = &#39;Here is a nice table!&#39;, booktabs = TRUE ) Table 2.1: Here is a nice table! Sepal.Length Sepal.Width Petal.Length Petal.Width Species 5.1 3.5 1.4 0.2 setosa 4.9 3.0 1.4 0.2 setosa 4.7 3.2 1.3 0.2 setosa 4.6 3.1 1.5 0.2 setosa 5.0 3.6 1.4 0.2 setosa 5.4 3.9 1.7 0.4 setosa 4.6 3.4 1.4 0.3 setosa 5.0 3.4 1.5 0.2 setosa 4.4 2.9 1.4 0.2 setosa 4.9 3.1 1.5 0.1 setosa 5.4 3.7 1.5 0.2 setosa 4.8 3.4 1.6 0.2 setosa 4.8 3.0 1.4 0.1 setosa 4.3 3.0 1.1 0.1 setosa 5.8 4.0 1.2 0.2 setosa 5.7 4.4 1.5 0.4 setosa 5.4 3.9 1.3 0.4 setosa 5.1 3.5 1.4 0.3 setosa 5.7 3.8 1.7 0.3 setosa 5.1 3.8 1.5 0.3 setosa You can write citations, too. For example, we are using the bookdown package (Xie 2025) in this sample book, which was built on top of R Markdown and knitr (Xie 2015). References Xie, Yihui. 2015. Dynamic Documents with R and Knitr. 2nd ed. Boca Raton, Florida: Chapman; Hall/CRC. http://yihui.name/knitr/. ———. 2025. Bookdown: Authoring Books and Technical Documents with r Markdown. https://github.com/rstudio/bookdown. "],["literature.html", "Capítulo 3 Literature", " Capítulo 3 Literature Here is a review of existing methods. "],["methods.html", "Capítulo 4 Methods 4.1 math example", " Capítulo 4 Methods We describe our methods in this chapter. Math can be added in body using usual syntax like this 4.1 math example \\(p\\) is unknown but expected to be around 1/3. Standard error will be approximated \\[ SE = \\sqrt{\\frac{p(1-p)}{n}} \\approx \\sqrt{\\frac{1/3 (1 - 1/3)} {300}} = 0.027 \\] You can also use math in footnotes like this1. We will approximate standard error to 0.0272 where we mention \\(p = \\frac{a}{b}\\)↩︎ \\(p\\) is unknown but expected to be around 1/3. Standard error will be approximated \\[ SE = \\sqrt{\\frac{p(1-p)}{n}} \\approx \\sqrt{\\frac{1/3 (1 - 1/3)} {300}} = 0.027 \\]↩︎ "],["applications.html", "Capítulo 5 Applications 5.1 Example one 5.2 Example two", " Capítulo 5 Applications Some significant applications are demonstrated in this chapter. 5.1 Example one 5.2 Example two "],["final-words.html", "Capítulo 6 Final Words", " Capítulo 6 Final Words We have finished a nice book. "],["references.html", "References", " References Xie, Yihui. 2015. Dynamic Documents with R and Knitr. 2nd ed. Boca Raton, Florida: Chapman; Hall/CRC. http://yihui.name/knitr/. ———. 2025. Bookdown: Authoring Books and Technical Documents with r Markdown. https://github.com/rstudio/bookdown. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
