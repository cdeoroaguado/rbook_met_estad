[["index.html", "Notas de métodos estadísticos Asignatura", " Notas de métodos estadísticos Carlos de Oro Aguado 2025-07-07 Asignatura La asignatura de Métodos Estadísticos tiene como propósito desarrollar en el estudiante competencias analíticas rigurosas para la comprensión, modelación e interpretación de datos cuantitativos, con base en herramientas estadísticas fundamentales orientadas a la ciencia de datos. A lo largo del curso se emplean enfoques descriptivos, inferenciales y multivariados, complementados con técnicas robustas no paramétricas, con énfasis en aplicaciones reales y toma de decisiones basadas en evidencia. Durante el primer corte, el enfoque se centra en el análisis exploratorio de datos y diagnóstico inferencial, abordando la caracterización de variables mediante medidas de tendencia central, dispersión y forma. Se introducen técnicas de análisis de correlación (coeficientes de Pearson, Spearman y Kendall) como base para evaluar relaciones lineales o no lineales entre variables. Además, se presenta la Regresión Lineal Simple (RLS), incluyendo la identificación de términos básicos, formulación del modelo, interpretación de coeficientes y evaluación de la bondad de ajuste. Se discuten los supuestos del modelo (normalidad, homocedasticidad, independencia y linealidad), y se introducen herramientas para el análisis gráfico de residuos. En el segundo corte, se profundiza en la modelación con RLS, enfocándose en sus aplicaciones prácticas, validación estadística e inferencia sobre los parámetros. Se abordan temas como la construcción de intervalos de confianza, contrastes de hipótesis para los coeficientes de regresión, análisis de significancia del modelo y predicciones puntuales e intervalares. Se refuerzan conceptos clave de validación, tales como el análisis de residuos, influencia y multicolinealidad. Asimismo, se inicia la transición hacia modelos más complejos, preparando el terreno para el análisis multivariado. El tercer corte está dedicado a la Regresión Lineal Múltiple (RLM), donde se modela la respuesta de una variable dependiente a partir de múltiples variables explicativas. Se analizan sus fundamentos matemáticos, estimación por mínimos cuadrados, interpretación de coeficientes parciales y evaluación de supuestos del modelo. Se incluye inferencia sobre parámetros, prueba global de significancia, análisis de varianza (ANOVA), selección de variables y medidas de ajuste como \\(R^2\\) ajustado y el criterio de información de Akaike (AIC). Finalmente, se ofrece una introducción a otros modelos de regresión (como regresión polinómica o con transformaciones) y a los principios básicos del análisis multivariado, orientado a estudiar estructuras de dependencia entre múltiples variables simultáneamente. En conjunto, este curso constituye un pilar fundamental para el desarrollo de habilidades analíticas aplicadas a la ciencia de datos, y prepara al estudiante para abordar con solvencia asignaturas posteriores como inferencia estadística, teoría de la probabilidad, aprendizaje estadístico y análisis multivariante avanzado. "],["intro.html", "Capítulo 1 Introducción 1.1 Introducción a R y RStudio 1.2 Introducción a Git y GitHub 1.3 Introducción a Tidyverse 1.4 Pasos para publicar un libro bookdown en GitHub Pages", " Capítulo 1 Introducción 1.1 Introducción a R y RStudio El primer paso para comenzar a trabajar con R, un lenguaje de programación especializado en estadística, ciencia de datos y visualización, es instalarlo en tu computadora. R es compatible con los principales sistemas operativos, incluyendo Windows, macOS y Linux. 1.1.1 ¿Qué es R? R es un lenguaje de programación y un entorno de software libre dedicado al análisis estadístico y la generación de gráficos. Su potencia radica en una gran variedad de paquetes estadísticos, su comunidad activa y su capacidad de integración con otras herramientas como Python, SQL, y plataformas de visualización como Power BI o Tableau. A continuación, se indican los enlaces oficiales para descargar (paso a paso) R: Descargar R Página oficial del proyecto R (https://cran.r-project.org): Figura 1.1: Software R En esta página puedes seleccionar tu sistema operativo: Para Windows: https://cran.r-project.org/bin/windows/base/ Para macOS: https://cran.r-project.org/bin/macosx/ Para Linux: https://cran.r-project.org/bin/linux/ Se realizará el proceso para la instalación de R para el sistema operativo Windows Figura 1.2: Paso a paso de la instalación de R (izquierda a derecha) 1.1.2 ¿Qué es RStudio? RStudio es un entorno de desarrollo integrado (IDE) que proporciona una interfaz gráfica intuitiva y muy funcional para trabajar con R. Entre sus características destacan: Editor de scripts con resaltado de sintaxis. Consola interactiva para ejecutar comandos. Panel de visualización de datos y objetos en memoria. Gráficos integrados. Soporte para proyectos y versiones de R. Integración con Git, Markdown, Quarto y Shiny. Aunque se puede usar R sin RStudio, la mayoría de los usuarios prefieren trabajar dentro de este entorno por su productividad, organización y facilidad de uso. A continuación, se indican los enlaces oficiales para descargar (paso a paso) RStudio: Descargar RStudio Página oficial de RStudio (ahora llamado Posit, https://posit.co/download/rstudio-desktop/): Figura 1.3: Desarrollo de entorno integrado (IDE) RStudio Selecciona la versión gratuita de RStudio Desktop y descarga el instalador correspondiente a tu sistema operativo. Se realizará el proceso para la instalación de RStudio para el sistema operativo Windows: Figura 1.4: Paso a paso de la instalación de RStudio Una vez finalizada la instalación, puedes iniciar RStudio desde el acceso directo en tu escritorio o buscándolo en el menú de inicio. Figura 1.5: Visualización de RStudio Al abrir RStudio por primera vez, se presenta un entorno dividido en cuatro paneles: Script o editor de código (arriba a la izquierda): donde se escriben los scripts .R o .Rmd. Consola (abajo a la izquierda): donde se ejecutan los comandos directamente. Entorno / Historial (arriba a la derecha): muestra los objetos cargados y el historial de comandos. Archivos, gráficos, paquetes, ayuda y visor (abajo a la derecha): herramientas auxiliares para explorar y trabajar eficientemente. Puedes verificar que R y RStudio están funcionando correctamente ejecutando una operación simple en la consola, como: 2 + 3 1.2 Introducción a Git y GitHub 1.2.1 ¿Qué es Git? Git es un sistema de control de versiones distribuido que permite gestionar y registrar los cambios realizados en archivos de un proyecto a lo largo del tiempo. Fue creado por Linus Torvalds y se ha convertido en el estándar para el desarrollo de software y proyectos colaborativos. El enlace es https://git-scm.com/. Figura 1.6: Sotfware Git Ventajas principales de Git Permite llevar un historial detallado de versiones. Facilita la colaboración en proyectos con múltiples personas. Permite trabajar en ramas (branches) para desarrollar funcionalidades de forma aislada. No depende de internet para el trabajo local. 1.2.1.1 Pasos para instalar Git Daremos una guía para la instalación de Git usando Windows (paso a paso): Instalar Git:  https://git-scm.com/downloads Ahora, debes realizar lo siguiente: Figura 1.7: Instalación de Git A continuación, comprobemos la instalación de Git. Figura 1.8: Verificación de Git 1.2.2 ¿Qué es GitHub? GitHub es una plataforma en línea que permite alojar repositorios de Git en la nube. Es ideal para compartir proyectos, colaborar en equipo y automatizar flujos de trabajo. Este es el enlace https://github.com. Figura 1.9: Plataforma GitHub Funciones principales de GitHub Crear y administrar repositorios públicos o privados. Gestionar cambios mediante pull requests. Seguir errores o tareas usando issues. Crear documentación, páginas web y wikis para los proyectos. Automatizar procesos con GitHub Actions. 1.2.2.1 Pasos para instalar GitHub A continuación, se presenta una guía paso a paso para la instalación de GitHub en Windows: Crear una cuenta en GitHub:  https://github.com Ahora, sigue las imagenes: Figura 1.10: Registro en GitHub Despues haces el proceso de verificación Completa el captcha de seguridad. GitHub puede pedirte que verifiques tu correo electrónico. Revisa tu bandeja de entrada y haz clic en el enlace de confirmación. Ingresas al enlace https://github.com y despues: Figura 1.11: Credenciales de verificación en GitHub Al ingresar, este sería el inicio Figura 1.12: Dashboard de GitHub A continuación, vamos a descargar GitHub Desktop para Windows; para ello debes usar el enlace https://desktop.github.com/download/ Figura 1.13: Credenciales de verificación en GitHub Diferencias claves entre Git y GitHub Git GitHub Herramienta local Plataforma en la nube Administra versiones Aloja y comparte repositorios No requiere internet Requiere conexión para sincronizar Se usa desde terminal o IDE Se accede por navegador o API 1.2.2.2 ¿Cómo se relacionan? Git administra tu proyecto localmente, guardando versiones y cambios. GitHub actúa como repositorio remoto, permitiendo subir (push) o descargar (pull) cambios desde y hacia otros colaboradores. Juntos permiten trabajar de forma segura, organizada y colaborativa desde distintos lugares. 1.3 Introducción a Tidyverse El Tidyverse es un conjunto de paquetes integrados para el lenguaje de programación R, diseñados con el objetivo de facilitar el análisis de datos de manera estructurada, legible y eficiente. Su filosofía se basa en el concepto de datos ordenados (tidy data), donde cada variable es una columna, cada observación una fila, y cada tipo de unidad observacional forma una tabla. Estos paquetes comparten principios de diseño comunes y una gramática coherente, lo que permite a los usuarios aprender un conjunto de reglas aplicables en todo el ecosistema, aumentando así la productividad y la claridad del código. 1.3.1 Representación visual del ecosistema Tidyverse Figura 1.14: Paquetes de tidyverse 1.3.2 Principales paquetes del Tidyverse A continuación se describen los paquetes más representativos que conforman el núcleo del Tidyverse:  ggplot2 Permite la creación de visualizaciones estadísticas sofisticadas mediante la Gramática de los Gráficos (Grammar of Graphics). Con ggplot2 puedes combinar capas de datos, geometrías, escalas y temas para construir gráficos informativos y estéticamente agradables. Es ampliamente utilizado en análisis exploratorio y comunicación de resultados.  dplyr Facilita la manipulación de datos mediante verbos intuitivos como: filter() para filtrar filas según condiciones lógicas, select() para elegir columnas, mutate() para crear o transformar variables, summarise() para resumir valores, group_by() para operaciones agrupadas. Trabaja perfectamente con tibble y se puede aplicar a bases de datos con dbplyr.  tidyr Su propósito es convertir datos desorganizados en un formato ordenado. Algunas de sus funciones clave incluyen: pivot_longer() y pivot_wider() para cambiar el formato de los datos. separate() para dividir una columna en varias. unite() para fusionar columnas en una sola. Estas funciones son fundamentales para preparar datos antes del análisis.  readr Ofrece funciones rápidas y confiables para importar archivos .csv, .tsv, .fwf, entre otros. Es más eficiente que read.table() y permite: Importar con read_csv(), read_delim() o read_fwf(). Detectar problemas de formato con problems(). Controlar tipos de datos con argumentos explícitos.  stringr Simplifica el trabajo con cadenas de texto (caracteres). Proporciona una sintaxis coherente para tareas comunes como: Búsqueda de patrones (str_detect, str_subset), Manipulación (str_replace, str_sub, str_trim), Conteo (str_count), Extracción (str_extract, str_match). Ideal para limpiar y procesar textos en análisis de encuestas, redes sociales o nombres de variables.  forcats Dedicado al tratamiento de factores en R, un tipo especial de variable categórica. forcats ofrece funciones para: Reordenar niveles según frecuencia (fct_infreq()), Fusionar niveles (fct_collapse()), Recodificar (fct_recode()), Ordenar según otras variables (fct_reorder()). Útil en análisis estadísticos donde el tratamiento adecuado de las categorías es clave.  lubridate Permite el manejo sencillo de fechas y horas. Resuelve uno de los aspectos más complejos en análisis temporal con funciones como: ymd(), dmy(), mdy() para convertir cadenas en fechas, hour(), minute(), second() para extraer componentes, interval(), duration() y period() para trabajar con intervalos de tiempo.  haven Permite importar y exportar archivos desde software estadístico como: SPSS (.sav, .zsav), Stata (.dta), SAS (.sas7bdat, .xpt). Esencial para interoperabilidad con datos institucionales y académicos que provienen de otras plataformas.  readxl Importa archivos de Excel (.xls, .xlsx) sin necesidad de tener Excel instalado. Las funciones clave incluyen: read_excel() para leer hojas completas, excel_sheets() para listar las hojas de un archivo. Ideal para usuarios que reciben datos administrativos, contables o estadísticos en formato Excel.  purrr Introduce herramientas de programación funcional en R, permitiendo aplicar funciones a listas o vectores con más control que lapply() o sapply(). Permite: Iterar con map(), map_df(), map_dbl(), etc. Trabajar con errores mediante safely(), possibly(). Manipular listas de manera estructurada. Ideal para automatizar tareas repetitivas.  tibble Es una versión mejorada de los data frames tradicionales. Entre sus ventajas: Muestra solo las primeras 10 filas y columnas visibles. No modifica automáticamente los nombres de columnas. Trabaja mejor con los flujos de trabajo del Tidyverse. 1.3.3 Instalación del Tidyverse en R Para instalar todos los paquetes del núcleo del Tidyverse, simplemente se ejecuta en la consola de R: install.packages(&quot;tidyverse&quot;) 1.4 Pasos para publicar un libro bookdown en GitHub Pages Para publicar un libro bookdown en GitHub Pages debes tener lo siguiente: Pre-requisitos Tener una cuenta en GitHub. Haber creado un repositorio público (ej. metodos_estadisticos). Tener Git instalado y configurado. Tener R y RStudio instalado y configurado Instalar el siguiente paquete install.packages(&quot;bookdown&quot;) Tener un proyecto bookdown funcional en tu computadora. Abre el archivo _bookdown.yml y asegúrate de incluir: book_filename: &quot;index&quot; output_dir: &quot;docs&quot; Esto hace que el libro se renderice en la carpeta docs, que es donde GitHub Pages busca el sitio por defecto. En RStudio o consola de R, corre: bookdown::render_book(&quot;index.Rmd&quot;) Abre la terminal en la carpeta del libro y ejecuta: git init git remote add origin https://github.com/cdeoroaguado/metodos_estadistico.git git add docs git commit -m &quot;primer despliegue del libro&quot; git push -u origin main Activa GitHub Pages Ve al repositorio en GitHub. Haz clic en Settings &gt; Pages. En Source, selecciona: Branch: main o master Folder: /docs Guarda los cambios. Después de unos segundos, tu libro estará disponible en: Enlace del texto Dale click en este enlace:  https://cdeoroaguado.github.io/metodos_estadistico/ 1.4.1 Video paso a paso de la publicación del libro en GitHub Pages Uno de los pasos más importantes al desarrollar un libro con bookdown es su publicación en línea, permitiendo el acceso abierto y permanente al contenido. Para ello, GitHub Pages se convierte en una herramienta ideal por su facilidad de uso y compatibilidad con proyectos de R. A continuación, se presenta un video tutorial donde se explican paso a paso los procedimientos necesarios para publicar correctamente un libro elaborado en bookdown a través de un repositorio en GitHub: "],["literature.html", "Capítulo 2 Literature", " Capítulo 2 Literature Here is a review of existing methods. "],["methods.html", "Capítulo 3 Methods 3.1 math example", " Capítulo 3 Methods We describe our methods in this chapter. Math can be added in body using usual syntax like this 3.1 math example \\(p\\) is unknown but expected to be around 1/3. Standard error will be approximated \\[ SE = \\sqrt{\\frac{p(1-p)}{n}} \\approx \\sqrt{\\frac{1/3 (1 - 1/3)} {300}} = 0.027 \\] You can also use math in footnotes like this1. We will approximate standard error to 0.0272 where we mention \\(p = \\frac{a}{b}\\) \\(p\\) is unknown but expected to be around 1/3. Standard error will be approximated \\[ SE = \\sqrt{\\frac{p(1-p)}{n}} \\approx \\sqrt{\\frac{1/3 (1 - 1/3)} {300}} = 0.027 \\] "],["applications.html", "Capítulo 4 Applications 4.1 Example one 4.2 Example two", " Capítulo 4 Applications Some significant applications are demonstrated in this chapter. 4.1 Example one 4.2 Example two "],["final-words.html", "Capítulo 5 Final Words", " Capítulo 5 Final Words We have finished a nice book. "],["references.html", "References", " References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
